input {
  file {
    path => "/app/logs/*.log"
    start_position => "beginning"
    sincedb_path => "/dev/null"
    codec => "json"
  }
  
  file {
    path => "/app/logs/application.log"
    start_position => "beginning"
    sincedb_path => "/dev/null"
    type => "application"
  }
  
  file {
    path => "/app/logs/error.log"
    start_position => "beginning"
    sincedb_path => "/dev/null"
    type => "error"
  }
}

filter {
  if [type] == "application" or [type] == "error" {
    grok {
      match => { "message" => "%{TIMESTAMP_ISO8601:timestamp} \[%{WORD:level}\] %{GREEDYDATA:message}" }
      overwrite => [ "message" ]
    }
    
    date {
      match => [ "timestamp", "ISO8601" ]
    }
  }
  
  # Parse JSON logs
  if [message] =~ /^\{.*\}$/ {
    json {
      source => "message"
    }
  }
  
  # Add common fields
  mutate {
    add_field => { "service" => "text-analyzer" }
    add_field => { "environment" => "${NODE_ENV:development}" }
  }
}

output {
  elasticsearch {
    hosts => ["elasticsearch:9200"]
    index => "text-analyzer-logs-%{+YYYY.MM.dd}"
  }
  
  stdout {
    codec => rubydebug
  }
}